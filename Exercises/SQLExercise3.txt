.headers on

--Name: Shae Morlis
--File: SQLexercise3.sql
-- Date: January 28, 2021


--1. First, I need the customer ID, the customer contact name, the employee
--ID, the employee name, the order ID, the number of orders, and the total amount of each order, where
--the customer/employee pair has produced five or more orders between them, ordered by the dollar
--amount of the order from highest to lowest. The output needs to be in a comma separated format
--with strings that include spaces and commas delimited by double quotes. The dollar amount should
--be formatted as a decimal number with two decimal places. Here is the output.

SELECT O.CustomerID||',"'||C.ContactName||'",'||O.EmployeeID||',"'||E.FirstName||' '||E.LastName||'",'||O.OrderID||','||COUNT(O.OrderID)||','||printf("%.2f", SUM(OD.UnitPrice*OD.Quantity))
AS 'CustomerID,ContactName,EmployeeID,emp_name,OrderID,num_orders,order_total'
FROM orders O INNER JOIN order_details OD ON O.OrderID=OD.OrderID INNER JOIN customers C ON O.CustomerID=C.CustomerID
INNER JOIN employees E On O.EmployeeID=E.EmployeeID GROUP BY O.CustomerID, C.ContactName, O.EmployeeID, E.FirstName||' '||E.LastName, O.OrderID
HAVING COUNT(O.OrderID)>=5 ORDER BY SUM(OD.UnitPrice*OD.Quantity) DESC;
CustomerID,ContactName,EmployeeID,emp_name,OrderID,num_orders,order_total
QUICK,"Horst Kloss",2,"Andrew Fuller",10515,5,10588.50
QUICK,"Horst Kloss",2,"Andrew Fuller",10691,5,10164.80
ERNSH,"Roland Mendel",3,"Janet Leverling",10514,5,8623.45
BLONP,"Frédérique Citeaux",4,"Margaret Peacock",10360,5,7390.20
QUICK,"Horst Kloss",3,"Janet Leverling",11021,5,6941.49
SAVEA,"Jose Pavarotti",5,"Steven Buchanan",10607,5,6475.40
SAVEA,"Jose Pavarotti",1,"Nancy Davolio",10612,5,6375.00
SAVEA,"Jose Pavarotti",4,"Margaret Peacock",10847,6,6164.90
SAVEA,"Jose Pavarotti",9,"Anne Dodsworth",10324,5,6155.90
KOENE,"Philip Cramer",9,"Anne Dodsworth",10893,5,5502.11
ERNSH,"Roland Mendel",8,"Laura Callahan",10979,6,4813.50
SAVEA,"Jose Pavarotti",1,"Nancy Davolio",11064,5,4722.30
ERNSH,"Roland Mendel",7,"Robert King",10836,5,4705.50
SAVEA,"Jose Pavarotti",2,"Andrew Fuller",10657,6,4371.60
QUICK,"Horst Kloss",8,"Laura Callahan",10845,5,4059.00
SUPRD,"Pascale Cartrain",7,"Robert King",10458,5,3891.00
SAVEA,"Jose Pavarotti",6,"Michael Suyama",10555,5,3680.50
ERNSH,"Roland Mendel",4,"Margaret Peacock",10698,5,3600.73
QUICK,"Horst Kloss",8,"Laura Callahan",10962,5,3584.00
WHITC,"Karl Jablonski",4,"Margaret Peacock",10861,5,3523.40
SAVEA,"Jose Pavarotti",1,"Nancy Davolio",10393,5,3302.60
SAVEA,"Jose Pavarotti",5,"Steven Buchanan",10714,5,2941.00
ERNSH,"Roland Mendel",4,"Margaret Peacock",10382,5,2900.00
VAFFE,"Palle Ibsen",1,"Nancy Davolio",10465,5,2719.00
FRANK,"Peter Franken",4,"Margaret Peacock",10337,5,2467.00
SAVEA,"Jose Pavarotti",6,"Michael Suyama",11031,5,2393.50
FRANK,"Peter Franken",4,"Margaret Peacock",10670,5,2301.75
AROUT,"Thomas Hardy",1,"Nancy Davolio",10558,5,2142.90
QUICK,"Horst Kloss",3,"Janet Leverling",10273,5,2142.40
QUEEN,"Lúcia Carvalho",7,"Robert King",10406,5,2018.20
RATTC,"Paula Wilson",4,"Margaret Peacock",10294,5,1887.60
RICSU,"Michael Holz",1,"Nancy Davolio",10537,5,1823.80
HUNGO,"Patricia McKenna",3,"Janet Leverling",10309,5,1762.00
WARTH,"Pirkko Koskitalo",2,"Andrew Fuller",10553,5,1546.30
KOENE,"Philip Cramer",1,"Nancy Davolio",10325,5,1497.00
FRANK,"Peter Franken",8,"Laura Callahan",10623,5,1429.75
RATTC,"Paula Wilson",1,"Nancy Davolio",11077,25,1374.60

--2. Second, I want the least productive pairs with the same columns. The total of orders should be less
--than three, the dollar amount of the order is less than $50.00, and the orders are ranked by increasing
--dollar amounts, starting with the least order. Here is the expected output.

SELECT O.CustomerID||',"'||C.ContactName||'",'||O.EmployeeID||',"'||E.FirstName||' '||E.LastName||'",'||O.OrderID||','||COUNT(O.OrderID)||','||printf("%.2f", SUM(OD.UnitPrice*OD.Quantity))
AS 'CustomerID,ContactName,EmployeeID,emp_name,OrderID,num_orders,order_total'
FROM orders O INNER JOIN order_details OD ON O.OrderID=OD.OrderID INNER JOIN customers C ON O.CustomerID=C.CustomerID
INNER JOIN employees E On O.EmployeeID=E.EmployeeID GROUP BY O.CustomerID, C.ContactName, O.EmployeeID, E.FirstName||' '||E.LastName, 
O.OrderID HAVING COUNT(O.OrderID)<3 AND SUM(OD.UnitPrice*OD.Quantity)<50 ORDER BY SUM(OD.UnitPrice*OD.Quantity) ASC;
CustomerID,ContactName,EmployeeID,emp_name,OrderID,num_orders,order_total
CACTU,"Patricio Simpson",9,"Anne Dodsworth",10782,1,12.50
FRANS,"Paolo Accorti",4,"Margaret Peacock",10807,1,18.40
REGGC,"Maurizio Moroni",9,"Anne Dodsworth",10586,1,28.00
SUPRD,"Pascale Cartrain",4,"Margaret Peacock",10767,1,28.00
OCEAN,"Yvonne Moncada",4,"Margaret Peacock",10898,1,30.00
LONEP,"Fran Wilson",8,"Laura Callahan",10883,1,36.00
SAVEA,"Jose Pavarotti",2,"Andrew Fuller",10815,1,40.00
ISLAT,"Helen Bennett",4,"Margaret Peacock",10674,1,45.00
LAMAI,"Annette Roulet",7,"Robert King",11051,1,45.00
NORTS,"Simon Crowther",3,"Janet Leverling",11057,1,45.00
WELLI,"Paula Parente",1,"Nancy Davolio",10900,1,45.00
SPLIR,"Art Braunschweiger",6,"Michael Suyama",10271,1,48.00
FRANS,"Paolo Accorti",2,"Andrew Fuller",10422,1,49.80

--3. Third, I need the most productive pairs as in the first report above, omitting the order ID but ranked
--by the average amount from highest to lowest of all orders by the customer/employee pair. Include
--only pairs where the amount of the average exceeds $2,500.00. Here is the expected output.

SELECT O.CustomerID||',"'||C.ContactName||'",'||O.EmployeeID||',"'||E.FirstName||' '||E.LastName||'",'||COUNT(O.OrderID)||','||printf("%.2f", AVG(OD.UnitPrice*OD.Quantity))
AS 'CustomerID,ContactName,EmployeeID,emp_name,num_orders,order_total' FROM orders O INNER JOIN order_details OD ON O.OrderID=OD.OrderID
INNER JOIN customers C ON O.CustomerID=C.CustomerID INNER JOIN employees E On O.EmployeeID=E.EmployeeID
GROUP BY O.CustomerID, C.ContactName, O.EmployeeID, E.FirstName||' '||E.LastName, O.OrderID
HAVING AVG(OD.UnitPrice*OD.Quantity)>2500 ORDER BY AVG(OD.UnitPrice*OD.Quantity) DESC;
CustomerID,ContactName,EmployeeID,emp_name,num_orders,order_total
HANAR,"Mario Pontes",1,"Nancy Davolio",1,15810.00
QUICK,"Horst Kloss",2,"Andrew Fuller",2,8625.00
RATTC,"Paula Wilson",9,"Anne Dodsworth",2,5690.00
HUNGO,"Patricia McKenna",3,"Janet Leverling",2,5417.62
PICCO,"Georg Pipps",7,"Robert King",2,5370.80
GREAL,"Howard Snyder",4,"Margaret Peacock",2,4445.50
HUNGO,"Patricia McKenna",2,"Andrew Fuller",2,4133.70
SAVEA,"Jose Pavarotti",7,"Robert King",4,4080.48
MEREP,"Jean Fresnière",7,"Robert King",3,3831.07
FOLKO,"Maria Larsson",7,"Robert King",2,3263.63
QUEEN,"Lúcia Carvalho",5,"Steven Buchanan",4,3070.30
WHITC,"Karl Jablonski",2,"Andrew Fuller",3,2967.50
KOENE,"Philip Cramer",3,"Janet Leverling",4,2872.68
SIMOB,"Jytte Petersen",4,"Margaret Peacock",4,2820.80
RATTC,"Paula Wilson",3,"Janet Leverling",4,2623.90
QUICK,"Horst Kloss",3,"Janet Leverling",4,2547.93

--4. Finally, I need the least productive pairs as ranked by average order amount, from lowest to highest,
--formatted as above. Omit the order ID. Include only pairs where the average order amount is less than
--$50.00. Here is the expected output.

SELECT O.CustomerID||',"'||C.ContactName||'",'||O.EmployeeID||',"'||E.FirstName||' '||E.LastName||'",'||COUNT(O.OrderID)||','||printf("%.2f", AVG(OD.UnitPrice*OD.Quantity))
AS 'CustomerID,ContactName,EmployeeID,emp_name,num_orders,order_total' FROM orders O INNER JOIN order_details OD ON O.OrderID=OD.OrderID
INNER JOIN customers C ON O.CustomerID=C.CustomerID INNER JOIN employees E On O.EmployeeID=E.EmployeeID
GROUP BY O.CustomerID, C.ContactName, O.EmployeeID, E.FirstName||' '||E.LastName, O.OrderID HAVING AVG(OD.UnitPrice*OD.Quantity)<50
ORDER BY AVG(OD.UnitPrice*OD.Quantity);
CustomerID,ContactName,EmployeeID,emp_name,num_orders,order_total
CACTU,"Patricio Simpson",9,"Anne Dodsworth",1,12.50
FRANS,"Paolo Accorti",4,"Margaret Peacock",1,18.40
REGGC,"Maurizio Moroni",9,"Anne Dodsworth",1,28.00
SUPRD,"Pascale Cartrain",4,"Margaret Peacock",1,28.00
LAUGB,"Yoshi Tannamuri",2,"Andrew Fuller",2,28.75
ROMEY,"Alejandra Camino",4,"Margaret Peacock",3,28.83
OCEAN,"Yvonne Moncada",4,"Margaret Peacock",1,30.00
LONEP,"Fran Wilson",8,"Laura Callahan",1,36.00
RANCH,"Sergio Gutiérrez",6,"Michael Suyama",2,38.00
SAVEA,"Jose Pavarotti",2,"Andrew Fuller",1,40.00
FRANS,"Paolo Accorti",3,"Janet Leverling",2,44.00
ANATR,"Ana Trujillo",7,"Robert King",2,44.40
REGGC,"Maurizio Moroni",4,"Margaret Peacock",2,44.50
ISLAT,"Helen Bennett",4,"Margaret Peacock",1,45.00
LAMAI,"Annette Roulet",7,"Robert King",1,45.00
NORTS,"Simon Crowther",3,"Janet Leverling",1,45.00
WELLI,"Paula Parente",1,"Nancy Davolio",1,45.00
FRANS,"Paolo Accorti",1,"Nancy Davolio",2,46.75
SPLIR,"Art Braunschweiger",6,"Michael Suyama",1,48.00
FRANS,"Paolo Accorti",2,"Andrew Fuller",1,49.80

--5. Please create a report with the order ID, the customer ID, the customer name, the customer country,
--and the dollar amount of the order, sorted alphabetically by country and numerically from highest to
--lowest by the dollar amount of the order, where the order total exceeds $5,000.00. Here is the output.

SELECT O.OrderID||','||C.CustomerID||',"'||C.CompanyName||'",'||C.Country||','||SUM(OD.UnitPrice*OD.Quantity)	
AS 'OrderID,CustomerID,CompanyName,Country,total_order'
FROM orders O INNER JOIN order_details OD ON O.OrderID=OD.OrderID
INNER JOIN customers C ON O.CustomerID=C.CustomerID GROUP BY O.OrderID, C.CustomerID, C.CompanyName, C.Country
HAVING SUM(OD.UnitPrice*OD.Quantity)>5000 ORDER BY C.Country, SUM(OD.UnitPrice*OD.Quantity) DESC;
OrderID,CustomerID,CompanyName,Country,total_order
10353,PICCO,"Piccolo und mehr",Austria,10741.6
10514,ERNSH,"Ernst Handel",Austria,8623.45
10776,ERNSH,"Ernst Handel",Austria,6984.5
11017,ERNSH,"Ernst Handel",Austria,6750.0
10633,ERNSH,"Ernst Handel",Austria,6483.05
10895,ERNSH,"Ernst Handel",Austria,6379.4
10595,ERNSH,"Ernst Handel",Austria,6300.0
10430,ERNSH,"Ernst Handel",Austria,5796.0
10351,ERNSH,"Ernst Handel",Austria,5677.6
11072,ERNSH,"Ernst Handel",Austria,5218.0
10981,HANAR,"Hanari Carnes",Brazil,15810.0
10372,QUEEN,"Queen Cozinha",Brazil,12281.2
10424,MEREP,"Mère Paillarde",Canada,11493.2
10417,SIMOB,"Simons bistro",Denmark,11283.2
10360,BLONP,"Blondesddsl père et fils",France,7390.2
10865,QUICK,"QUICK-Stop",Germany,17250.0
10817,KOENE,"Königlich Essen",Germany,11490.7
10515,QUICK,"QUICK-Stop",Germany,10588.5
10540,QUICK,"QUICK-Stop",Germany,10191.7
10691,QUICK,"QUICK-Stop",Germany,10164.8
11021,QUICK,"QUICK-Stop",Germany,6941.49
10893,KOENE,"Königlich Essen",Germany,5502.11
10897,HUNGO,"Hungry Owl All-Night Grocers",Ireland,10835.24
10912,HUNGO,"Hungry Owl All-Night Grocers",Ireland,8267.4
10687,HUNGO,"Hungry Owl All-Night Grocers",Ireland,6201.9
10993,FOLKO,"Folk och fä HB",Sweden,6527.25
11030,SAVEA,"Save-a-lot Markets",USA,16321.9
10889,RATTC,"Rattlesnake Canyon Grocery",USA,11380.0
10479,RATTC,"Rattlesnake Canyon Grocery",USA,10495.6
11032,WHITC,"White Clover Markets",USA,8902.5
10816,GREAL,"Great Lakes Food Market",USA,8891.0
10607,SAVEA,"Save-a-lot Markets",USA,6475.4
10612,SAVEA,"Save-a-lot Markets",USA,6375.0
10847,SAVEA,"Save-a-lot Markets",USA,6164.9
10324,SAVEA,"Save-a-lot Markets",USA,6155.9
10440,SAVEA,"Save-a-lot Markets",USA,5793.1
10678,SAVEA,"Save-a-lot Markets",USA,5256.5
10616,GREAL,"Great Lakes Food Market",USA,5032.0

--6. I want to know the unique (distinct) cities, regions, and postal codes: 
--Write three queries, using inner and outer joins. Report the results of the queries. There is no need for any further reporting.
--(a) where we have both customers and employees,

SELECT DISTINCT E.City, E.Region, E.PostalCode FROM  employees E INNER JOIN customers C On C.City=E.City AND C.region=E.region AND C.PostalCode=E.PostalCode;

--(b) where we have customers but no employees AND both customers and employees,
SELECT DISTINCT E.City, E.Region, E.PostalCode FROM  employees E LEFT OUTER JOIN customers C On C.City=E.City AND C.region=E.region AND C.PostalCode=E.PostalCode;
City|Region|PostalCode
Seattle|WA|98122
Tacoma|WA|98401
Kirkland|WA|98033
Redmond|WA|98052
London|NULL|SW1 8JR
London|NULL|EC2 7JR
London|NULL|RG1 9SP
Seattle|WA|98105
London|NULL|WG2 7LT

--(c) where we have employees but no customers AND both customers and employees. 

SELECT DISTINCT C.City, C.Region, C.PostalCode FROM  customers C  LEFT OUTER JOIN employees E On C.City=E.City AND C.region=E.region AND C.PostalCode=E.PostalCode;
City|Region|PostalCode
City|Region|PostalCode
Berlin||12209
México D.F.||05021
México D.F.||05023
London||WA1 1DP
Luleå||S-958 22
Mannheim||68306
Strasbourg||67000
Madrid||28023
Marseille||13008
Tsawassen|BC|T2F 8M4
London||EC2 5NT
Buenos Aires||1010
México D.F.||05022
Bern||3012
Sao Paulo|SP|05432-043
London||WX1 6LT
Aachen||52066
Nantes||44000
London||WX3 6FW
Graz||8010
Sao Paulo|SP|05442-030
Madrid||28034
Lille||59000
Bräcke||S-844 67
München||80805
Torino||10100
Lisboa||1675
Barcelona||08022
Sevilla||41101
Campinas|SP|04876-786
Eugene|OR|97403
Caracas|DF|1081
Rio de Janeiro|RJ|05454-876
San Cristóbal|Táchira|5022
Elgin|OR|97827
Cork|Co. Cork|
Cowes|Isle of Wight|PO31 7PJ
Brandenburg||14776
Versailles||78000
Toulouse||31000
Vancouver|BC|V3F 2K1
Walla Walla|WA|99362
Frankfurt a.M.||60528
San Francisco|CA|94117
Barquisimeto|Lara|3508
I. de Margarita|Nueva Esparta|4980
Portland|OR|97219
Bergamo||24100
Bruxelles||B-1180
Montréal|Québec|H1J 1C3
Leipzig||04179
London||SW7 1RZ
Anchorage|AK|99508
Köln||50739
Paris||75012
México D.F.||05033
Salzburg||5020
Lisboa||1756
Rio de Janeiro|RJ|02389-673
Sao Paulo|SP|05487-020
Cunewalde||01307
Albuquerque|NM|87110
Reggio Emilia||42100
Rio de Janeiro|RJ|02389-890
Genève||1203
Madrid||28001
Stavern||4110
Boise|ID|83720
London||OX15 4NB
Kobenhavn||1734
Paris||75016
Lander|WY|82520
Charleroi||B-6000
Portland|OR|97201
Butte|MT|59801
Münster||44087
Sao Paulo|SP|05634-030
Kirkland|WA|98034
Århus||8200
Lyon||69004
Reims||51100
Stuttgart||70563
Oulu||90110
Resende|SP|08737-363
Seattle|WA|98128
Helsinki||21240
Warszawa||01-012
