Shae Morlis
TSQL HW#5

1. What is a table expression? Can you give a technical definition of a table expression? A table expression is a named query expression that represents a valid relational table. You can use table expressions in data-manipulation statements much like you use other tables.
2. In what SQL clause are derived tables (table valued subqueries) located? Derived tables (also known as table subqueries) are defined in the FROM clause of an outer query. Their scope of existence is the outer query. As soon as the outer query is finished, the derived table is gone.
3. Why can you refer to column aliases in an outer query that you defined in an inner table valued
subquery? This behavior helps you get around the fact that you can’t refer to column aliases assigned in the SELECT clause in query clauses that are logically processed prior to the SELECT clause (for example, WHERE or GROUP BY).For example, suppose you need to write a query against the Sales.Orders table and return the number of distinct customers handled in each order year. The following attempt is invalid because the GROUP BY clause refers to a column alias that was assigned in the SELECT clause, and the GROUP BY clause is logically processed prior to the SELECT clause. 
4. What SQL key word defines a common table expression? CTEs are defined by using a WITH statement
5. When using common table expressions, can a subsequent derived table use a table alias declared in a
preceding table expression? In each subsequent invocation of the recursive member, the reference to the CTE name represents the result set returned by the previous invocation of the recursive member. Both queries must be compatible in terms of the number of columns they return and the data types of the corresponding columns.
6. Can a main query refer to a previously defined common table expression by multiple aliases? Each CTE can refer to all previously defined CTEs, and the outer query can refer to all CTEs
7. In SQL, is a view a durable object? Views and inline table-valued functions (inline TVFs) are two types of table expressions whose definitions are stored as permanent objects in the database, making them reusable.
8. In a view, what does WITH CHECK OPTION do? Why is this important? If you want to prevent modifications that conflict with the view’s filter, add WITH CHECK OPTION at the end of the query defining the view.
9. In a view, what does SCHEMABINDING do? Why is this important? The SCHEMABINDING option is available to views and UDFs; it binds the schema of referenced objects and columns to the schema of the referencing object. It indicates that referenced objects cannot be dropped and that referenced columns cannot be dropped or altered.
10. What is a table valued function? Inline TVFs are reusable table expressions that support input parameters. In most respects, except for the support for input parameters, inline TVFs are similar to views. For this reason, I like to think of inline TVFs as parameterized views, even though they are not formally referred to this way.
11. What does the APPLY operator do? The APPLY operator is a powerful table operator. Like all table operators, APPLY is used in the FROM clause of a query. 
12. What are the two forms of the APPLY operator? Give an example of each. There are two supported types of APPLY: CROSS APPLY and OUTER APPLY. Like the JOIN table operator, APPLY performs its work in logical-query phases. CROSS APPLY implements only one logical-query processing phase, whereas OUTER APPLY implements two.

