--Name: Shae Morlis
--Date: Feb 9, 2021
--File: Lab07-shae

-- Microsoft SQL Server T-SQL Fundamentals
-- Chapter 07 - Beyond the Fundamentals of Querying
-- Exercises
-- Â© Itzik Ben-Gan 
---------------------------------------------------------------------

-- All exercises for this chapter will involve querying the dbo.Orders
-- table in the TSQLV4 database that you created and populated 
-- earlier by running the code in Listing 7-1

-- 1
-- Write a query against the dbo.Orders table that computes for each
-- customer order, both a rank and a dense rank,
-- partitioned by custid, ordered by qty 
select custid, orderid, qty,
rank() over(partition by custid order by qty) as rnk,
dense_rank() over(partition by custid order by qty) as drnk
from sales.ordervalues;

-- Desired output:
custid orderid     qty         rnk                  drnk
------ ----------- ----------- -------------------- --------------------
A      30001       10          1                    1
A      40005       10          1                    1
A      10001       12          3                    2
A      40001       40          4                    3
B      20001       12          1                    1
B      30003       15          2                    2
B      10005       20          3                    3
C      10006       14          1                    1
C      20002       20          2                    2
C      30004       22          3                    3
D      30007       30          1                    1

-- 2
-- The following query against the Sales.OrderValues view returns
-- distinct values and their associated row numbers
USE TSQLV4;

SELECT val, ROW_NUMBER() OVER(ORDER BY val) AS rownum
FROM Sales.OrderValues
GROUP BY val;

-- Can you think of an alternative way to achieve the same task?
-- Tables involved: TSQLV4 database, Sales.OrderValues view
with t as (
select distinct val from sales.ordervalues)
select val,
row_number() over (order by val) as rownum--window function
from t order by val;
-- Desired output:
val       rownum
--------- -------
12.50     1
18.40     2
23.80     3
28.00     4
30.00     5
33.75     6
36.00     7
40.00     8
45.00     9
48.00     10
...
12615.05  793
15810.00  794
16387.50  795

(795 row(s) affected)

-- 3
-- Write a query against the dbo.Orders table that computes for each
-- customer order:
-- * the difference between the current order quantity
--   and the customer's previous order quantity
-- * the difference between the current order quantity
--   and the customer's next order quantity.

-- Desired output:
select custid, orderid, qty, 
    --lag(qty) over(partition by custid order by orderdate, orderid) as prev, 
    qty - lag(qty) over(partition by custid order by orderdate, orderid) as diffprev, 
    --lead(qty) over(partition by custid order by orderdate, orderid) as next, 
    qty - lead(qty) over(partition by custid order by orderdate, orderid) as diffnext 
from dbo.orders
--order by custid, orderdate;


custid orderid     qty         diffprev    diffnext
------ ----------- ----------- ----------- -----------
A      30001       10          NULL        -2
A      10001       12          2           -28
A      40001       40          28          30
A      40005       10          -30         NULL
B      10005       20          NULL        8
B      20001       12          -8          -3
B      30003       15          3           NULL
C      30004       22          NULL        8
C      10006       14          -8          -6
C      20002       20          6           NULL
D      30007       30          NULL        NULL